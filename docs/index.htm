<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<meta name="description" content="FileMan File Manager">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<meta name="author" content="Richard Keasley">
<script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.min.js"></script>
<link href="https://code.jquery.com/ui/1.12.1/themes/smoothness/jquery-ui.css" rel="stylesheet" type="text/css" media="all">
<link href="/INC/icofont/style.css" rel="stylesheet" type="text/css" media="all">
<title>FileMan</title>
</head>
<body>
<h1>FileMan</h1>

<h2>Introduction</h2>
<p>There are three verbs: "get", "add", "del". These three verbs act on the following objects: "file", "dir", "settings". A command comprises (verb)_(object). E.g. <code>get_dir, del_dir, get_settings</code>. </p>

<h2>installation</h2>
<p>Copy the entire folder. Make sure it sits within your Website root path.</p>
<p>Plug-ins can be included as <code>(command).js</code>. There may be other helper files associated with the plug-in. They should all be named <code>(command)*</code>. <strong>Example:</strong> <code>add_file.js</code>, <code>add_file.php</code> are used to run the command "add_file".</p>

<h3>Dependencies</h3>
<dl>
<dt>PHP</dt>
<dd>Nothing extreme</dd>
<dt>jQuery<dt>
<dd>Including the UI style sheet. No ui components are used directly by FileMan. Remember plupload relies on jQuery and jQuery-ui.</dd> 
<dt>plupload<dt>
<dd><a href="https://www.plupload.com/">Plupload</a> is included in the plug-in (<code>add_file</code>). It can be replaced if you want.</dd>
<dt>icomoon font</dt>
<dd><a href="https://icomoon.io/">IcoMoon font</a> is used to create icons.</dd>
</dl>

<h2>Settings</h2>
<p>Settings are all in <code>settings.php</code>. Note that "settings" is read-only from the front-end; it has to be edited in the php script.</p>

<dl>
<dt>Permissions</dt>
<dd>Nothing will work until permissions have been set. Permissions are held in the static array <code>perms</code> in <code>settings.php</code>.</dd>
<dd><strong>Example:</strong> Permission to get a directory is granted as follows: <code>fm_settings::$perms[] = 'get_dir';</code></dd>
<dd><strong>NB:</strong> You can't do anything if you don't have permission "get_dir". Make sure it's the first permission set.</dd>

<dt>url_root</dt>
<dd>Website root path. Used to calculate HTML for file items (e.g. get_file).</dd>
<dd><strong>NB:</strong> If file is outside of <code>url_root</code> HTML values will be returned empty.</dd>

<dt>fm_root</dt>
<dd>base path for FileMan. The FileMan can not work outside of this path.</dd>
<dd><strong>NB:</strong> If <code>fm_root</code> is outside of <code>url_root</code> HTML values will be returned empty.</dd>

<dt>upload_types</dt> 
<dd>Use <code>type=>extensions</code>.</dd>
<dd><strong>Example:</strong> <code>'image' => 'jpg,gif,png'</code>. Only files with the given extensions can be uploaded. The FileMan can filtered to only allow the extensions in the filtered type to be shown or uploaded.</dd>
<dd><strong>File icons</strong> are set according to <code>upload_type filter</code>.</dd>
</dl>

<h2>Implementation</h2>
<ul>
<li>Include the main <code>include.php</code></li>
<li>Put the containing elements in</li>
<li>Use jQuery to initialize the FileMan</li>
</ul>
<p>Plug-ins appear as buttons in the button bar. Note plug-in elements are not loaded until the corresponding button is clicked.</p>
<p>The file manager is set up with the "init" method: <code>FileMan.init(selector=0, fm_path='', filter='')</code>. Leave all values blank for the default popup to be created.</p>
<dl>
<dt>selector (string)</dt>
<dd>String to describe element. This will be used as a jQuery object <code>$(selector)</code>. Leave it blank for default pop-up dialog.</dd>
<dt>fm_path (string)</dt>
<dd>The start path for FileMan. Note: This path is relative to <code>fm_root</code> in settings. Leave it blank for <code>fm_root</code>.</dt>
<dt>filter (string)</dt>
<dd>The filter to use for FileMan (including uploads). NB: This should be one of the <code>upload_types</code> in settings. Leave it blank to show all files. Note: Even if there is no filter, you can only upload file types registered <code>upload_types</code>.</dd>
</dl>  

<h2>Examples</h2>
<h3><a href="simple.php">simple</a></h3>
<pre>
&lt;?php include_once '{path-to-fileman}/include.php';?&gt;
&lt;div id="fileman"&gt;&lt;/div&gt; 
&lt;script&gt;
$(function() {
	var fileman_element = FileMan.init('#fileman');
});
&lt;/script&gt;
</pre>

<h3><a href="popup1.php">Dialog</a></h3>
<pre>
&lt;?php include_once '{path-to-fileman}/include.php';?&gt;
&lt;button name="popup"&gt;Fileman&lt;/button&gt;
&lt;p&gt;Here is the value: &lt;span id="get_file"&gt;&lt;/span&gt;&lt;/p&gt;
&lt;script&gt;
$(function() {
	$('button[name=popup]').click(function(){ 
		var fileman_dialog = FileMan.init();
		FileMan.get_file = function(listitem) {
			$('#get_file').html(FileMan.item.html(listitem));
			fileman_dialog.dialog('close');
		};
		fileman_dialog.dialog('open'); 
	});
});
&lt;/script&gt;
</pre>

<h3><a href="popup2.php">Dialog with start path and filter</a></h3>
<pre>
&lt;?php include_once '{path-to-fileman}/include.php';?&gt;
&lt;button name="popup"&gt;Fileman&lt;/button&gt;
&lt;p&gt;Here is the value: &lt;span id="get_file"&gt;&lt;/span&gt;&lt;/p&gt;
&lt;script&gt;
$(function() {
	$('button[name=popup]').click(function(){ 
		var fileman_dialog = FileMan.init(0, '/files/test.jpg', 'image');
		FileMan.get_file = function(listitem) {
			$('#get_file').html(FileMan.item.html(listitem));
			fileman_dialog.dialog('close');
		};
		fileman_dialog.dialog('open'); 
	});
});
&lt;/script&gt;
</pre>
</body>
</html>
